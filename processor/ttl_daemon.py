#!/usr/bin/env python3
# ttl_daemon.py - –î–µ–º–æ–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏

import time
import schedule
from ttl_cleaner import TTLManager

class TTLCleanupDaemon:
    def __init__(self, collections_to_clean):
        self.manager = TTLManager()
        self.collections = collections_to_clean
    
    def cleanup_job(self):
        """–ó–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π"""
        print(f"\nüïí [{time.ctime()}] Running TTL cleanup...")
        
        for collection in self.collections:
            expired_count = self.manager.get_expired_count(collection)
            if expired_count > 0:
                print(f"üóëÔ∏è  Cleaning {collection}: {expired_count} expired points")
                self.manager.delete_expired_points(collection)
            else:
                print(f"‚úÖ {collection}: no expired points")
    
    def run(self, cleanup_interval_hours=6):
        """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω–∞"""
        print(f"üöÄ TTL Cleanup Daemon started")
        print(f"üìÅ Monitoring collections: {self.collections}")
        print(f"‚è∞ Cleanup interval: every {cleanup_interval_hours} hours")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedule.every(cleanup_interval_hours).hours.do(self.cleanup_job)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É –ø–µ—Ä–≤—É—é –æ—á–∏—Å—Ç–∫—É
        self.cleanup_job()
        
        try:
            while True:
                schedule.run_pending()
                time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        except KeyboardInterrupt:
            print("\nüõë TTL Daemon stopped")

if __name__ == "__main__":
    # –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    collections = ["logs-ttl-7d", "logs-ttl-30d", "application-logs"]
    
    daemon = TTLCleanupDaemon(collections)
    daemon.run(cleanup_interval_hours=6)  # –û—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
